version: 2.1

references:
  defaults: &defaults
    working_directory: ~/cocktail-hub

  ruby_docker_image: &ruby_docker_image
    image: circleci/ruby:2.7.1-node-browsers
    environment:
      BUNDLER_VERSION: 2.1.4
      RAILS_ENV: test
      MYSQL_HOST: 127.0.0.1
      MYSQL_USERNAME: 'root'
      MYSQL_PASSWORD: ''
      MYSQL_PORT: 3306

  restore_gem_cache: &restore_gem_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        - v1-dependencies-

jobs:
  checkout_code:
    <<: *defaults
    docker:
      - *ruby_docker_image
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/project

  test:
    <<: *defaults
    docker:
      - *ruby_docker_image
      - image: circleci/mysql
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    steps:
      - checkout
      - *restore_gem_cache
      - run:
          name: Chrome Driver Install
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get install -y unzip
            wget -N http://chromedriver.storage.googleapis.com/87.0.4280.88/chromedriver_linux64.zip -P ~/
            unzip ~/chromedriver_linux64.zip -d ~/
            rm ~/chromedriver_linux64.zip
            sudo chown root:root ~/chromedriver
            sudo chmod 755 ~/chromedriver
            sudo mv ~/chromedriver /usr/bin/chromedriver
            sh -c 'wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -'
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update && sudo apt-get install -y google-chrome-stable
          background: true
      - run: gem install bundler -v 2.1.4
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: yarn install --check-files

      - run: mv -f ./config/database.yml.ci ./config/database.yml
      - run: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run: bundle exec rails db:create db:schema:load --trace

      - run: bundle exec bin/webpack

      - run: bundle exec rubocop
      - run: bundle exec rspec
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    <<: *defaults
    docker:
      - *ruby_docker_image
    steps:
      - checkout
      - *restore_gem_cache
      - run: gem install bundler -v 2.1.4
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: yarn install --check-files
      - add_ssh_keys:
          fingerprints:
            - "${KEY_FINGERPRINT}"
      - run:
          name: Start ssh-keyscan
          command: ssh-keyscan -p ${SSH_PORT} ${HOST_NAME} >> ~/.ssh/known_hosts
      - deploy:
          name: capistrano deploy
          command: bundle exec cap production deploy

workflows:
  version: 2.1
  test_and_deploy:
    jobs:
      - checkout_code
      - test:
          requires:
            - checkout_code
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master