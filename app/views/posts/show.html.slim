.container-fluid.app-color-light
  .text-center.text-light.text-monospace.p-4
    h1 投稿詳細

  - if flash.notice.present?
    .alert.alert-primary.m-3= flash.notice

  .container
    .card.rounded-lg.app-color-sub
      .card-body
        .row.justify-content-center
          .row.card-title.text-center
            .col-sm-6.col-md-6
              h4.text-monospace
                = @post.title
            .col-sm-6.col-md-6
              h4.text-secondary
                = @post.genre
          .col-12.card-img
            = image_tag @post.image, alt: 'post image', class: 'resize-image rounded'
          .col-12.card-body.m-2
            h5 材料
            .container.bg-light.rounded
              .card-text
                p
                  = @post.ingredients
          .col-12.card-body.m-2
            h5 メモ
            .container.bg-light.rounded
              .card-text
                p
                  = @post.memo

          .col-12.row.m-2.d-flex.align-items-center
            .col-sm-4.col-md-4.bg-light.rounded= link_to @post.user, data: {"turbolinks" => false}
              = image_tag @post.user.display_image, class: 'resize-image rounded-circle post-user', style: 'width: 50px; height: 50px;'
              p.text-secondary.d-inline-block.ml-2
                = @post.user.username

            .col-sm-4.col-md-4.text-secondary.ml-5
              p 投稿作成日時
              = simple_time(@post[:created_at])

            .col-sm-2.col-md-2.card-body
              = render 'shared/like_form'

  .container
    .card.rounded-lg.app-color-sub
      .card-body
        h4.text-center.text-monospace コメント一覧

        .card-body
          #post-comments-index
            = paginate @comments
            - @comments.each do |comment|
              .container.bg-light.rounded.border
                .card-text
                  = image_tag comment.user.display_image, class: 'resize-image rounded-circle', style: 'width: 50px; height: 50px;'
                  p.m-3.d-inline-block= comment.user.username
                  p.m-3.d-inline-block.p-wrap-90= comment.content
                - if current_user.id == comment.user_id
                  .d-flex.justify-content-end.align-items-center
                    .mr-3
                      = simple_time(comment[:created_at])
                    = link_to 'コメントを削除', post_comment_path(@post, comment), method: :delete, data: {"turbolinks" => false}, class: 'btn btn-sm btn-danger'
            = paginate @comments

          .card-body.text-center.rounded.mt-3.app-color-light= form_with model: [@post, @comment], local: true do |c|
            = c.text_field :content, id: 'Content', class: 'form-control border-dark'
            = c.hidden_field :post_id, value: @post.id
            = c.submit 'コメントする', class: 'btn btn-lg shadow-lg text-light text-monospace mt-4 app-color-btn'

  - if current_user.id == @post.user_id
    .container
      .card.rounded-lg.app-color-sub
        .row
          .col.text-center.m-2
            = link_to '投稿を編集', edit_post_path(@post), data: {"turbolinks" => false}, class: 'btn btn-lg app-color-light'
          .col.text-center.m-2
            = link_to '投稿を削除', @post, method: :delete, data: {'turbolinks' => false, confirm: '本当に投稿を削除しますか？'}, class: 'btn btn-lg btn-danger text-light'